"use strict";(self.webpackChunk_etherealengine_docs=self.webpackChunk_etherealengine_docs||[]).push([[80591],{3905:(e,n,i)=>{i.d(n,{Zo:()=>p,kt:()=>f});var t=i(67294);function o(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function s(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){o(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function l(e,n){if(null==e)return{};var i,t,o=function(e,n){if(null==e)return{};var i,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||(o[i]=e[i]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var a=t.createContext({}),u=function(e){var n=t.useContext(a),i=n;return e&&(i="function"==typeof e?e(n):s(s({},n),e)),i},p=function(e){var n=u(e.components);return t.createElement(a.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var i=e.components,o=e.mdxType,r=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(i),m=o,f=c["".concat(a,".").concat(m)]||c[m]||d[m]||r;return i?t.createElement(f,s(s({ref:n},p),{},{components:i})):t.createElement(f,s({ref:n},p))}));function f(e,n){var i=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=i.length,s=new Array(r);s[0]=m;var l={};for(var a in n)hasOwnProperty.call(n,a)&&(l[a]=n[a]);l.originalType=e,l[c]="string"==typeof e?e:o,s[1]=l;for(var u=2;u<r;u++)s[u]=i[u];return t.createElement.apply(null,s)}return t.createElement.apply(null,i)}m.displayName="MDXCreateElement"},3303:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var t=i(87462),o=(i(67294),i(3905));const r={id:"physics_enums_CollisionGroups",title:"Module: physics/enums/CollisionGroups",sidebar_label:"physics/enums/CollisionGroups",sidebar_position:0,custom_edit_url:null},s=void 0,l={unversionedId:"API/engine/modules/physics_enums_CollisionGroups",id:"API/engine/modules/physics_enums_CollisionGroups",title:"Module: physics/enums/CollisionGroups",description:"Enumerations",source:"@site/docs/API/engine/modules/physics_enums_CollisionGroups.md",sourceDirName:"API/engine/modules",slug:"/API/engine/modules/physics_enums_CollisionGroups",permalink:"/etherealengine-docs/docs/API/engine/modules/physics_enums_CollisionGroups",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"physics_enums_CollisionGroups",title:"Module: physics/enums/CollisionGroups",sidebar_label:"physics/enums/CollisionGroups",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"physics/components/RigidBodyComponent",permalink:"/etherealengine-docs/docs/API/engine/modules/physics_components_RigidBodyComponent"},next:{title:"physics/functions/getInteractionGroups",permalink:"/etherealengine-docs/docs/API/engine/modules/physics_functions_getInteractionGroups"}},a={},u=[{value:"Enumerations",id:"enumerations",level:2},{value:"Variables",id:"variables",level:2},{value:"AvatarCollisionMask",id:"avatarcollisionmask",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"DefaultCollisionMask",id:"defaultcollisionmask",level:3},{value:"Defined in",id:"defined-in-1",level:4}],p={toc:u},c="wrapper";function d(e){let{components:n,...i}=e;return(0,o.kt)(c,(0,t.Z)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"enumerations"},"Enumerations"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/etherealengine-docs/docs/API/engine/enums/physics_enums_CollisionGroups.CollisionGroups"},"CollisionGroups"))),(0,o.kt)("h2",{id:"variables"},"Variables"),(0,o.kt)("h3",{id:"avatarcollisionmask"},"AvatarCollisionMask"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,o.kt)("strong",{parentName:"p"},"AvatarCollisionMask"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"number")),(0,o.kt)("h4",{id:"defined-in"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/EtherealEngine/etherealengine/blob/6d0095c/packages/engine/src/physics/enums/CollisionGroups.ts#L11"},"packages/engine/src/physics/enums/CollisionGroups.ts:11")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"defaultcollisionmask"},"DefaultCollisionMask"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,o.kt)("strong",{parentName:"p"},"DefaultCollisionMask"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"number")),(0,o.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/EtherealEngine/etherealengine/blob/6d0095c/packages/engine/src/physics/enums/CollisionGroups.ts#L9"},"packages/engine/src/physics/enums/CollisionGroups.ts:9")))}d.isMDXComponent=!0}}]);